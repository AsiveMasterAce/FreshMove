@using FreshMove.Helpers;
@model PaginatedList<FreshMove.Models.users.ApplicationUser>;
@{
    ViewData["Title"] = "Stock Employee";

}

<div class="container-fluid mt-4 mx-5">




    <h2 class="mb-5" style="font-weight:600; color:var(--Green);">Stock Employees</h2>

  


    <h4 class="mb-5">List of Stock Employees</h4>

    <form asp-action="Users" asp-controller="Admin" method="get">
        <div class="col-4 mb-3">
            <div class="input-group mt-5">
                <input type="search" class="form-control rounded" name="searchString" placeholder="search user" aria-label="Search" value="@ViewData["CurrentFilter"]" aria-describedby="search-addon" />
                <input type="submit" class="btn btn-outline-primary" value="search" />
            </div>
        </div>
    </form>
    @{
        int i = 0;
        
    }
    <table class="table">
        <thead class="thead-light">
            <tr>
                <th scope="col">#</th>
                <th scope="col">

                    First Name
                    <a class="text-black text-decoration-none ms-auto" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                        <i class="bi bi-sort-alpha-down"></i>

                        <i class="bi bi-sort-alpha-up"></i>

                    </a>

                </th>
                <th scope="col">

                    Last Name
                    <a class="text-black text-decoration-none" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["LNameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                        <i class="bi bi-sort-alpha-down"></i>
                    </a>
                    <a class="text-black text-decoration-none" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["LNameDescSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                        <i class="bi bi-sort-alpha-up"></i>
                    </a>
                </th>
                <th scope="col">

                    Email
                    <a class="text-black text-decoration-none" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["EmailSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                        <i class="bi bi-sort-alpha-down"></i>

                        <i class="bi bi-sort-alpha-up"></i>
                    </a>
                </th>
                <th scope="col">
                    Role
            
                </th>
                <th scope="col">

                    Gender
                    <a class="text-black text-decoration-none" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["GenderSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <i class="bi bi-sort-alpha-down"></i>

                    </a>
                    <a class="text-black text-decoration-none" asp-controller="Admin" asp-action="Users" asp-route-sortOrder="@ViewData["GenderDescSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                        <i class="bi bi-sort-alpha-up"></i>

                    </a>
                </th>
               
                <th scope="col"></th>
            </tr>
        </thead>
        <tbody>
            
            @foreach (var user in Model)
            {
                
                i++;
                <tr>
                    <th>@i </th>
                    <td class="text-capitalize">@user.FirstName</td>
                    <td class="text-capitalize">@user.LastName</td>
                    <td>@user.Email</td>
                    <td>@user.UserRole</td>
                    <td class="text-capitalize">@user.Gender</td>
                    <td>@user.Race</td>
                 
                    <td>
                        

                    </td>
                </tr>
            }


        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Users"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Users"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
</div>