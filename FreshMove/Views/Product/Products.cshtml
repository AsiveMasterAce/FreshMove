@model PaginatedList<FreshMove.Models.products.Product>
@using FreshMove.Helpers;
@using FreshMove.Models.users;
@using Microsoft.AspNetCore.Identity
@using FreshMove.Constants;
@inject UserManager<ApplicationUser> UserManager
@{
    ViewData["Title"] = "Products";
}

<div class="container-fluid mt-4 mx-5">




    <h2 class="mb-5" style="font-weight:600; color:var(--Green);">Products</h2>

    <div class="d-flex pb-2 mb-4">
        @if (User.IsInRole(RoleConstants.StockManager) || User.IsInRole(RoleConstants.StockTaker))
        {
            <div class="">
                <h4 style="font-weight:600;">Add A New Product </h4>
            </div>
            <div class="ms-auto">
                <a class="btn btn-primary" asp-action="AddProduct" asp-controller="Product"> Add Product</a>
            </div>
        }
        else
        {
            
            
        }

    </div>

    <h4 class="mb-5">List of Products</h4>


    <form asp-action="Products" asp-controller="Product" method="get">
        <div class="col-4 mb-3">
            <div class="input-group mt-5">
                <input type="search" class="form-control rounded" name="searchString" placeholder="search product" aria-label="Search" value="@ViewData["CurrentFilter"]" aria-describedby="search-addon" />
                <input type="submit" class="btn btn-outline-primary" value="search" />
            </div>
        </div>
    </form>

    @if (Model.Count() != 0)
    {
        <table class="table mt-4">
            <thead>
                <tr>
                    <th>
                        #
                    </th> 
                    <th>
                        Product Image
                    </th> 
                        
                    <th>
                         Product Name
                        <a class="text-black text-decoration-none ms-auto" asp-controller="Product" asp-action="Products" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                            <i class="bi bi-sort-alpha-down"></i>

                            <i class="bi bi-sort-alpha-up"></i>

                        </a>
                    </th> 
                    <th>
                         Category
                        <a class="text-black text-decoration-none ms-auto" asp-controller="Product" asp-action="Products" asp-route-sortOrder="@ViewData["CategorySortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">

                       

                            <i class="bi bi-sort-alpha-up"></i>

                        </a>
                    </th>
                    <th>
                        Description
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        Price
                    </th>
                    <th>

                    </th>
                </tr>
            </thead>
            <tbody>
                @{
                    int i = 0;
                    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                }
                @foreach (var item in Model)
                {
                    i++;
                    <tr>
                        <td>
                            @i
                        </td> 
                        <td>
                            <img src="~/product/@item.productImage" alt="@item.Name +@item.Description" height="120px" width="120px" />
                        </td>
                        <td>
                            @item.Name
                        </td>
                        <td>

                            @item.Category.Name
                        </td>
                        <td class="text-wrap" style="width: 30%">
                            @item.Description
                        </td>    
                        <td>
                            @item.Quantity
                        </td>
                        <td>
                            R @item.Price
                        </td>

                        @if (User.IsInRole(RoleConstants.StockManager) || User.IsInRole(RoleConstants.StockTaker))
                        {

                          <td>
                            <a asp-action="EditProduct" asp-controller="Product" asp-route-id="@item.Id"> <i class="bi bi-pen " style="color:#023047"></i></a> |

                            <a asp-action="DeleteProduct" asp-controller="Product" asp-route-id="@item.Id">  <i class="bi bi-trash2" style="color:#ae2012"> </i> </a>
                         </td>
                        }
                        else{
                            <td>


                            </td>
                        }
                    </tr>
                }

            </tbody>
        </table>
   

    <a asp-action="Products"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex - 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @prevDisabled">
        Previous
    </a>
    <a asp-action="Products"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@(Model.PageIndex + 1)"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @nextDisabled">
        Next
    </a>
    }
    else
    {
        <div class="alert alert-warning" role="alert">
            The List of Products is Empty
        </div>


    }

</div>